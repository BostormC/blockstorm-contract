{
  "address": "0xE175670658c405A61F1B2fd9319043F70eCb0EFD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cusd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExchangeUSDT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExchangedCUSD",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "addToBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cusd",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "exchangeCUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "exchangeUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "extractTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isBlack",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRun",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeFromBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cusd",
          "type": "address"
        }
      ],
      "name": "setCUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isRun",
          "type": "bool"
        }
      ],
      "name": "setRun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdt",
          "type": "address"
        }
      ],
      "name": "setUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1084a297d564e4b7b5a19f0a271197f1abf89d7a19ba9c962a96cfdb29101be5",
  "receipt": {
    "to": null,
    "from": "0xb3Ea65806AD2195eDbcc06501883D199d9c13592",
    "contractAddress": "0xE175670658c405A61F1B2fd9319043F70eCb0EFD",
    "transactionIndex": 103,
    "gasUsed": "1130785",
    "logsBloom": "0x
    "blockHash": "0xb9c80fbd238e3589ad14ec5be1ac1e3783f83a6b464c988034321593f29d796a",
    "transactionHash": "0x1084a297d564e4b7b5a19f0a271197f1abf89d7a19ba9c962a96cfdb29101be5",
    "logs": [
      {
        "transactionIndex": 103,
        "blockNumber": 34976876,
        "transactionHash": "0x1084a297d564e4b7b5a19f0a271197f1abf89d7a19ba9c962a96cfdb29101be5",
        "address": "0xE175670658c405A61F1B2fd9319043F70eCb0EFD",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b3ea65806ad2195edbcc06501883d199d9c13592"
        ],
        "data": "0x",
        "logIndex": 218,
        "blockHash": "0xb9c80fbd238e3589ad14ec5be1ac1e3783f83a6b464c988034321593f29d796a"
      },
      {
        "transactionIndex": 103,
        "blockNumber": 34976876,
        "transactionHash": "0x1084a297d564e4b7b5a19f0a271197f1abf89d7a19ba9c962a96cfdb29101be5",
        "address": "0xE175670658c405A61F1B2fd9319043F70eCb0EFD",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000b3ea65806ad2195edbcc06501883d199d9c13592",
          "0x000000000000000000000000b3ea65806ad2195edbcc06501883d199d9c13592"
        ],
        "data": "0x",
        "logIndex": 219,
        "blockHash": "0xb9c80fbd238e3589ad14ec5be1ac1e3783f83a6b464c988034321593f29d796a"
      }
    ],
    "blockNumber": 34976876,
    "cumulativeGasUsed": "10048464",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x55d398326f99059ff775485246999027b3197955",
    "0x1D02A5E83273AA16E0426Ce23d23FbbF0fa8dEFa",
    "0x49843b49d0D7953C650a9a327320FfA14384F14B",
    "0xb3Ea65806AD2195eDbcc06501883D199d9c13592"
  ],
  "solcInputHash": "99258cf6cfee791380694d97ef550649",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cusd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExchangeUSDT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExchangedCUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cusd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"exchangeCUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"exchangeUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"extractTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRun\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cusd\",\"type\":\"address\"}],\"name\":\"setCUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isRun\",\"type\":\"bool\"}],\"name\":\"setRun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"name\":\"setUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Exchange is Ownable {\\n    mapping(address => bool) public blacklist;\\n\\n    address public usdt;\\n    address public cusd;\\n    address public receiver;\\n\\n    bool public isRun;\\n\\n    event ExchangeUSDT(address indexed from, uint256 amount);\\n    event ExchangedCUSD(address indexed from, uint256 amount);\\n\\n    modifier onlyRun() {\\n        require(isRun, \\\"Exchange is not running\\\");\\n        _;\\n    }\\n\\n    modifier notBlacklist() {\\n        require(!blacklist[msg.sender], \\\"sender is black\\\");\\n        _;\\n    }\\n\\n    constructor(address _usdt, address _cusd, address _receiver, address initialOwner) {\\n        usdt = _usdt;\\n        cusd = _cusd;\\n        isRun = true;\\n        receiver = _receiver;\\n        transferOwnership(initialOwner);\\n    }\\n\\n\\n    function exchangeCUSD(uint256 tokenAmount) external onlyRun notBlacklist {\\n        require(msg.sender == tx.origin, \\\"notOrigin\\\");\\n        require(tokenAmount > 0, \\\"Token amount must be greater than 0\\\");\\n\\n        require(IERC20(usdt).balanceOf(msg.sender) >= tokenAmount, \\\"Insufficient USDT balance\\\");\\n        require(IERC20(cusd).balanceOf(address(this)) >= tokenAmount, \\\"Insufficient CUSD balance\\\");\\n\\n        IERC20(usdt).transferFrom(msg.sender, receiver, tokenAmount);\\n        IERC20(cusd).transfer(msg.sender, tokenAmount);\\n\\n        emit ExchangedCUSD(msg.sender, tokenAmount);\\n    }\\n\\n    function exchangeUSDT(uint256 tokenAmount) external onlyRun notBlacklist{\\n        require(msg.sender == tx.origin, \\\"notOrigin\\\");\\n        require(tokenAmount > 0, \\\"Token amount must be greater than 0\\\");\\n\\n        require(IERC20(cusd).balanceOf(msg.sender) >= tokenAmount, \\\"Insufficient cusd balance\\\");\\n        require(IERC20(usdt).balanceOf(address(this)) >= tokenAmount, \\\"Insufficient USDT balance\\\");\\n\\n        IERC20(cusd).transferFrom(msg.sender, address(this), tokenAmount);\\n        IERC20(usdt).transfer(msg.sender, tokenAmount);\\n\\n        emit ExchangeUSDT(msg.sender, tokenAmount);\\n    }\\n\\n    function transferToken(address recipient, uint256 amount) external {\\n        require(msg.sender == tx.origin, \\\"not Origin\\\");\\n        require(IERC20(cusd).balanceOf(msg.sender) >= amount, \\\"Insufficient cusd balance\\\");\\n        IERC20(cusd).transferFrom(msg.sender,address(this), amount);\\n        IERC20(cusd).transfer(recipient, amount);\\n    }\\n\\n\\n    function extractTokens(address tokenAddress, address to, uint256 amount) external onlyOwner {\\n        require(to != address(0), \\\"Invalid recipient address\\\");\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\n\\n        IERC20 token = IERC20(tokenAddress);\\n        require(token.balanceOf(address(this)) >= amount, \\\"Insufficient balance\\\");\\n        token.transfer(to, amount);\\n    }\\n\\n    function isBlack(address _user) external view returns (bool) {\\n        return blacklist[_user];\\n    }\\n\\n\\n    function setUSDT(address _usdt) external onlyOwner {\\n        usdt = _usdt;\\n    }\\n\\n    function setCUSD(address _cusd) external onlyOwner {\\n        cusd = _cusd;\\n    }\\n\\n    function setRun(bool _isRun) external onlyOwner {\\n        isRun = _isRun;\\n    }\\n\\n    function addToBlacklist(address _user) external onlyOwner {\\n        blacklist[_user] = true;\\n    }\\n\\n    function removeFromBlacklist(address _user) external onlyOwner {\\n        blacklist[_user] = false;\\n    }\\n\\n    function setReceive(address _addr) external onlyOwner {\\n        receiver = _addr;\\n    }\\n}\",\"keccak256\":\"0xc3799870a0ab82e1e5fb71143f314bc0254775be3d26897af0f2c77afb94cd3c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063537df3b6116100ad578063c17d504b11610071578063c17d504b1461026b578063f2fde38b1461027e578063f695dfc914610291578063f7260d3e146102a5578063f9f92be4146102b857600080fd5b8063537df3b614610219578063715018a61461022c5780638da5cb5b1461023457806390b62fa614610245578063a5c6d7991461025857600080fd5b80632f48ab7d116100f45780632f48ab7d1461019157806331e921c2146101a4578063332daccf146101b757806344337ea1146101f357806350c1b9231461020657600080fd5b80630c577bdc146101265780631072cbea146101565780632e66bf331461016b5780632efa4bf81461017e575b600080fd5b600354610139906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610169610164366004611025565b6102db565b005b61016961017936600461104f565b6104ca565b61016961018c36600461108b565b6106a3565b600254610139906001600160a01b031681565b6101696101b236600461108b565b6106cd565b6101e36101c536600461108b565b6001600160a01b031660009081526001602052604090205460ff1690565b604051901515815260200161014d565b61016961020136600461108b565b6106f7565b61016961021436600461108b565b610726565b61016961022736600461108b565b610750565b610169610779565b6000546001600160a01b0316610139565b6101696102533660046110ad565b61078d565b6101696102663660046110ad565b610b30565b6101696102793660046110d4565b610ec0565b61016961028c36600461108b565b610ee6565b6004546101e390600160a01b900460ff1681565b600454610139906001600160a01b031681565b6101e36102c636600461108b565b60016020526000908152604090205460ff1681565b33321461031c5760405162461bcd60e51b815260206004820152600a6024820152693737ba1027b934b3b4b760b11b60448201526064015b60405180910390fd5b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610364573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038891906110f1565b10156103d25760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e7420637573642062616c616e636560381b6044820152606401610313565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d919061110a565b5060035460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156104a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c5919061110a565b505050565b6104d2610f5f565b6001600160a01b0382166105285760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606401610313565b600081116105785760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610313565b6040516370a0823160e01b8152306004820152839082906001600160a01b038316906370a0823190602401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e491906110f1565b10156106295760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610313565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c919061110a565b5050505050565b6106ab610f5f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6106d5610f5f565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6106ff610f5f565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61072e610f5f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610758610f5f565b6001600160a01b03166000908152600160205260409020805460ff19169055565b610781610f5f565b61078b6000610fb9565b565b600454600160a01b900460ff166107e05760405162461bcd60e51b815260206004820152601760248201527645786368616e6765206973206e6f742072756e6e696e6760481b6044820152606401610313565b3360009081526001602052604090205460ff16156108325760405162461bcd60e51b815260206004820152600f60248201526e73656e64657220697320626c61636b60881b6044820152606401610313565b33321461086d5760405162461bcd60e51b81526020600482015260096024820152683737ba27b934b3b4b760b91b6044820152606401610313565b6000811161088d5760405162461bcd60e51b815260040161031390611127565b6002546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f991906110f1565b10156109435760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e7420555344542062616c616e636560381b6044820152606401610313565b6003546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af91906110f1565b10156109fd5760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420435553442062616c616e6365000000000000006044820152606401610313565b600254600480546040516323b872dd60e01b815233928101929092526001600160a01b03908116602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a80919061110a565b5060035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af6919061110a565b5060405181815233907f0ceb0622a751f2e62115f1c92bfd404bf549411ca0bf68f23725fa493c3f97b4906020015b60405180910390a250565b600454600160a01b900460ff16610b835760405162461bcd60e51b815260206004820152601760248201527645786368616e6765206973206e6f742072756e6e696e6760481b6044820152606401610313565b3360009081526001602052604090205460ff1615610bd55760405162461bcd60e51b815260206004820152600f60248201526e73656e64657220697320626c61636b60881b6044820152606401610313565b333214610c105760405162461bcd60e51b81526020600482015260096024820152683737ba27b934b3b4b760b91b6044820152606401610313565b60008111610c305760405162461bcd60e51b815260040161031390611127565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9c91906110f1565b1015610ce65760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e7420637573642062616c616e636560381b6044820152606401610313565b6002546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5291906110f1565b1015610d9c5760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e7420555344542062616c616e636560381b6044820152606401610313565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e17919061110a565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610e69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8d919061110a565b5060405181815233907fd10edf7895a054ad2a18d30da74f0ab30fec4cd6540087a1dedf6bb506f8502090602001610b25565b610ec8610f5f565b60048054911515600160a01b0260ff60a01b19909216919091179055565b610eee610f5f565b6001600160a01b038116610f535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610313565b610f5c81610fb9565b50565b6000546001600160a01b0316331461078b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610313565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461102057600080fd5b919050565b6000806040838503121561103857600080fd5b61104183611009565b946020939093013593505050565b60008060006060848603121561106457600080fd5b61106d84611009565b925061107b60208501611009565b9150604084013590509250925092565b60006020828403121561109d57600080fd5b6110a682611009565b9392505050565b6000602082840312156110bf57600080fd5b5035919050565b8015158114610f5c57600080fd5b6000602082840312156110e657600080fd5b81356110a6816110c6565b60006020828403121561110357600080fd5b5051919050565b60006020828403121561111c57600080fd5b81516110a6816110c6565b60208082526023908201527f546f6b656e20616d6f756e74206d75737420626520677265617465722074686160408201526206e20360ec1b60608201526080019056fea26469706673582212209d602a72bebafec1ea82e630acea2c43dd65b98e3213246b4b29eb7f252dbaf964736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5350,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9932,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "blacklist",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9934,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "usdt",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9936,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "cusd",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 9938,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "receiver",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9940,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "isRun",
        "offset": 20,
        "slot": "4",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}