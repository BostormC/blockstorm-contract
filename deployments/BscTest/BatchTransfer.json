{
  "address": "0xBA9C6b52e762B71Da81102EcED6354d668FB21eE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_coinAddr",
          "type": "address"
        }
      ],
      "name": "BatchTranserToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "res",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "sucessNum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "BatchTransferMain",
      "outputs": [
        {
          "internalType": "bool",
          "name": "res",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "sucessNum",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf76c1b519cb0b68b3aadf076335c72510322add39ea59f4911d00aca90404b97",
  "receipt": {
    "to": null,
    "from": "0x289F8F063c4304F432bb96DD31e82bdCc5CcE142",
    "contractAddress": "0xBA9C6b52e762B71Da81102EcED6354d668FB21eE",
    "transactionIndex": 0,
    "gasUsed": "569191",
    "logsBloom": "0x
    "blockHash": "0xbac664eea8897e34a31be751cc4a92c8dd923d19fc487815d4c92ff5010d54aa",
    "transactionHash": "0xf76c1b519cb0b68b3aadf076335c72510322add39ea59f4911d00aca90404b97",
    "logs": [],
    "blockNumber": 36373153,
    "cumulativeGasUsed": "569191",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "de24b731781e57b46debbe773563387f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_coinAddr\",\"type\":\"address\"}],\"name\":\"BatchTranserToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"res\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"sucessNum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchTransferMain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"res\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"sucessNum\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BatchTransfer.sol\":\"BatchTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/BatchTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n\\ncontract BatchTransfer{\\n\\n    function BatchTranserToken(\\n        address payable[] memory _users,\\n        uint256[] memory _amounts,\\n        address _coinAddr\\n    )\\n    public\\n    returns(bool res, uint256 sucessNum)\\n    {\\n        require(_users.length == _amounts.length,\\\"not same length\\\");\\n        uint256 balance = IERC20(_coinAddr).balanceOf(msg.sender);\\n        uint256 allowBalance = IERC20(_coinAddr).allowance(msg.sender,address(this));\\n\\n        for(uint8 i = 0; i < _users.length; i++){\\n            require(_users[i] != address(0),\\\"address is zero\\\");\\n            require(balance >= _amounts[i] && allowBalance >= _amounts[i],\\\"not enough balance\\\");\\n            balance = balance - _amounts[i];\\n            allowBalance = allowBalance - _amounts[i];\\n            require(IERC20(_coinAddr).transferFrom(msg.sender,_users[i],_amounts[i]) == true,\\\"transferFrom error\\\");\\n\\n            sucessNum++;\\n        }\\n        res = true;\\n    }\\n\\n    function BatchTransferMain (\\n        address payable[] memory _users,\\n        uint256[] memory _amounts\\n    )\\n    public\\n    payable\\n    returns(bool res, uint256 sucessNum)\\n    {\\n        uint256 balance = msg.value;\\n        require(_users.length == _amounts.length, \\\"not same length\\\");\\n        for (uint8 i = 0; i < _users.length; i++) {\\n            require(_users[i] != address(0),\\\"address is zero\\\");\\n            address payable user = _users[i];\\n            uint256 amount = _amounts[i];\\n            require(amount <= balance, \\\"not have amount\\\");\\n            balance -= amount;\\n            user.transfer(amount);\\n\\n            sucessNum++ ;\\n        }\\n        if (balance > 0)\\n            payable(msg.sender).transfer(balance);\\n\\n        res = true;\\n    }\\n}\\n\",\"keccak256\":\"0x278d1aa07611fe44cd04327e0fa6e6edc30fef5667f85d86e4e2e9ad5eb0b0de\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610955806100206000396000f3fe6080604052600436106100295760003560e01c806388fdd9031461002e578063f0caf8ba14610069575b600080fd5b34801561003a57600080fd5b5061004e610049366004610786565b61007c565b60408051921515835260208301919091520160405180910390f35b61004e6100773660046107fe565b61043e565b60008083518551146100c75760405162461bcd60e51b815260206004820152600f60248201526e0dcdee840e6c2daca40d8cadccee8d608b1b60448201526064015b60405180910390fd5b6040516370a0823160e01b81523360048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101329190610862565b604051636eb1769f60e11b81523360048201523060248201529091506000906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a69190610862565b905060005b87518160ff16101561042f5760006001600160a01b0316888260ff16815181106101d7576101d761087b565b60200260200101516001600160a01b0316036102275760405162461bcd60e51b815260206004820152600f60248201526e61646472657373206973207a65726f60881b60448201526064016100be565b868160ff168151811061023c5761023c61087b565b6020026020010151831015801561026f5750868160ff16815181106102635761026361087b565b60200260200101518210155b6102b05760405162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f7567682062616c616e636560701b60448201526064016100be565b868160ff16815181106102c5576102c561087b565b6020026020010151836102d891906108a7565b9250868160ff16815181106102ef576102ef61087b565b60200260200101518261030291906108a7565b9150856001600160a01b03166323b872dd338a8460ff16815181106103295761032961087b565b60200260200101518a8560ff16815181106103465761034661087b565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c991906108be565b151560011461040f5760405162461bcd60e51b81526020600482015260126024820152713a3930b739b332b9233937b69032b93937b960711b60448201526064016100be565b83610419816108e7565b945050808061042790610900565b9150506101ab565b50600193505050935093915050565b600080600034905083518551146104895760405162461bcd60e51b815260206004820152600f60248201526e0dcdee840e6c2daca40d8cadccee8d608b1b60448201526064016100be565b60005b85518160ff1610156105f25760006001600160a01b0316868260ff16815181106104b8576104b861087b565b60200260200101516001600160a01b0316036105085760405162461bcd60e51b815260206004820152600f60248201526e61646472657373206973207a65726f60881b60448201526064016100be565b6000868260ff168151811061051f5761051f61087b565b602002602001015190506000868360ff16815181106105405761054061087b565b602002602001015190508381111561058c5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a185d9948185b5bdd5b9d608a1b60448201526064016100be565b61059681856108a7565b6040519094506001600160a01b0383169082156108fc029083906000818181858888f193505050501580156105cf573d6000803e3d6000fd5b50846105da816108e7565b955050505080806105ea90610900565b91505061048c565b50801561062857604051339082156108fc029083906000818181858888f19350505050158015610626573d6000803e3d6000fd5b505b60019250509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561067357610673610634565b604052919050565b600067ffffffffffffffff82111561069557610695610634565b5060051b60200190565b6001600160a01b03811681146106b457600080fd5b50565b600082601f8301126106c857600080fd5b813560206106dd6106d88361067b565b61064a565b82815260059290921b840181019181810190868411156106fc57600080fd5b8286015b848110156107205780356107138161069f565b8352918301918301610700565b509695505050505050565b600082601f83011261073c57600080fd5b8135602061074c6106d88361067b565b82815260059290921b8401810191818101908684111561076b57600080fd5b8286015b84811015610720578035835291830191830161076f565b60008060006060848603121561079b57600080fd5b833567ffffffffffffffff808211156107b357600080fd5b6107bf878388016106b7565b945060208601359150808211156107d557600080fd5b506107e28682870161072b565b92505060408401356107f38161069f565b809150509250925092565b6000806040838503121561081157600080fd5b823567ffffffffffffffff8082111561082957600080fd5b610835868387016106b7565b9350602085013591508082111561084b57600080fd5b506108588582860161072b565b9150509250929050565b60006020828403121561087457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156108b9576108b9610891565b500390565b6000602082840312156108d057600080fd5b815180151581146108e057600080fd5b9392505050565b6000600182016108f9576108f9610891565b5060010190565b600060ff821660ff810361091657610916610891565b6001019291505056fea26469706673582212207643b42077ae23fb9af96f0fcdbe240b9c8fb30f2fb7ed3b93c76728e77db27f64736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c806388fdd9031461002e578063f0caf8ba14610069575b600080fd5b34801561003a57600080fd5b5061004e610049366004610786565b61007c565b60408051921515835260208301919091520160405180910390f35b61004e6100773660046107fe565b61043e565b60008083518551146100c75760405162461bcd60e51b815260206004820152600f60248201526e0dcdee840e6c2daca40d8cadccee8d608b1b60448201526064015b60405180910390fd5b6040516370a0823160e01b81523360048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101329190610862565b604051636eb1769f60e11b81523360048201523060248201529091506000906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a69190610862565b905060005b87518160ff16101561042f5760006001600160a01b0316888260ff16815181106101d7576101d761087b565b60200260200101516001600160a01b0316036102275760405162461bcd60e51b815260206004820152600f60248201526e61646472657373206973207a65726f60881b60448201526064016100be565b868160ff168151811061023c5761023c61087b565b6020026020010151831015801561026f5750868160ff16815181106102635761026361087b565b60200260200101518210155b6102b05760405162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f7567682062616c616e636560701b60448201526064016100be565b868160ff16815181106102c5576102c561087b565b6020026020010151836102d891906108a7565b9250868160ff16815181106102ef576102ef61087b565b60200260200101518261030291906108a7565b9150856001600160a01b03166323b872dd338a8460ff16815181106103295761032961087b565b60200260200101518a8560ff16815181106103465761034661087b565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c991906108be565b151560011461040f5760405162461bcd60e51b81526020600482015260126024820152713a3930b739b332b9233937b69032b93937b960711b60448201526064016100be565b83610419816108e7565b945050808061042790610900565b9150506101ab565b50600193505050935093915050565b600080600034905083518551146104895760405162461bcd60e51b815260206004820152600f60248201526e0dcdee840e6c2daca40d8cadccee8d608b1b60448201526064016100be565b60005b85518160ff1610156105f25760006001600160a01b0316868260ff16815181106104b8576104b861087b565b60200260200101516001600160a01b0316036105085760405162461bcd60e51b815260206004820152600f60248201526e61646472657373206973207a65726f60881b60448201526064016100be565b6000868260ff168151811061051f5761051f61087b565b602002602001015190506000868360ff16815181106105405761054061087b565b602002602001015190508381111561058c5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a185d9948185b5bdd5b9d608a1b60448201526064016100be565b61059681856108a7565b6040519094506001600160a01b0383169082156108fc029083906000818181858888f193505050501580156105cf573d6000803e3d6000fd5b50846105da816108e7565b955050505080806105ea90610900565b91505061048c565b50801561062857604051339082156108fc029083906000818181858888f19350505050158015610626573d6000803e3d6000fd5b505b60019250509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561067357610673610634565b604052919050565b600067ffffffffffffffff82111561069557610695610634565b5060051b60200190565b6001600160a01b03811681146106b457600080fd5b50565b600082601f8301126106c857600080fd5b813560206106dd6106d88361067b565b61064a565b82815260059290921b840181019181810190868411156106fc57600080fd5b8286015b848110156107205780356107138161069f565b8352918301918301610700565b509695505050505050565b600082601f83011261073c57600080fd5b8135602061074c6106d88361067b565b82815260059290921b8401810191818101908684111561076b57600080fd5b8286015b84811015610720578035835291830191830161076f565b60008060006060848603121561079b57600080fd5b833567ffffffffffffffff808211156107b357600080fd5b6107bf878388016106b7565b945060208601359150808211156107d557600080fd5b506107e28682870161072b565b92505060408401356107f38161069f565b809150509250925092565b6000806040838503121561081157600080fd5b823567ffffffffffffffff8082111561082957600080fd5b610835868387016106b7565b9350602085013591508082111561084b57600080fd5b506108588582860161072b565b9150509250929050565b60006020828403121561087457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156108b9576108b9610891565b500390565b6000602082840312156108d057600080fd5b815180151581146108e057600080fd5b9392505050565b6000600182016108f9576108f9610891565b5060010190565b600060ff821660ff810361091657610916610891565b6001019291505056fea26469706673582212207643b42077ae23fb9af96f0fcdbe240b9c8fb30f2fb7ed3b93c76728e77db27f64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}